{"version":3,"sources":["components/FlavorForm.js","App.js","serviceWorker.js","index.js"],"names":["FlavorForm","props","state","location","jobtitle","level","handleLocationChange","bind","handleJobTitleChange","handleLevelChange","handleSubmit","getDataAxios","axios","get","data","this","response","console","log","event","setState","target","value","alert","onSubmit","onChange","type","React","Component","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37f5d4aa.chunk.js","sourcesContent":["import React from \"react\";\n\nimport axios from \"axios\";\n\nclass FlavorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { location: \"AL\", jobtitle: \"Account\", level: \"Level 1\" };\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleJobTitleChange = this.handleJobTitleChange.bind(this);\n    this.handleLevelChange = this.handleLevelChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getDataAxios = this.getDataAxios.bind(this);\n  }\n\n  async getDataAxios() {\n    const response = await axios.get(\"https://dog.ceo/api/breeds/list/all\", {\n      data: {\n        location: this.state.location,\n        jobtitle: this.state.jobtitle,\n        level: this.state.level\n      }\n    });\n    console.log(response.data);\n  }\n\n  handleLocationChange(event) {\n    this.setState({\n      location: event.target.value\n    });\n  }\n  handleJobTitleChange(event) {\n    this.setState({\n      jobtitle: event.target.value\n    });\n  }\n  handleLevelChange(event) {\n    this.setState({\n      level: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(this.state.location + this.state.jobtitle + this.state.level);\n    //event.preventDefault();\n    this.getDataAxios();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          State\n          <select\n            value={this.state.location}\n            onChange={this.handleLocationChange}\n          >\n            <option value=\"AL\">AL</option>\n            <option value=\"AK\">AK</option>\n            <option value=\"AZ\">AZ</option>\n            <option value=\"AR\">AR</option>\n            <option value=\"CA\">CA</option>\n            <option value=\"CO\">CO</option>\n            <option value=\"CT\">CT</option>\n            <option value=\"DE\">DE</option>\n            <option value=\"FL\">FL</option>\n            <option value=\"GA\">GA</option>\n            <option value=\"HI\">HI</option>\n            <option value=\"ID\">ID</option>\n            <option value=\"IL\">IL</option>\n            <option value=\"IN\">IN</option>\n            <option value=\"IA\">IA</option>\n            <option value=\"KS\">KS</option>\n            <option value=\"KY\">KY</option>\n            <option value=\"LA\">LA</option>\n            <option value=\"ME\">ME</option>\n            <option value=\"MD\">MD</option>\n            <option value=\"MA\">MA</option>\n            <option value=\"MI\">MI</option>\n            <option value=\"MN\">MN</option>\n            <option value=\"MS\">MS</option>\n            <option value=\"MO\">MO</option>\n            <option value=\"MT\">MT</option>\n            <option value=\"NE\">NE</option>\n            <option value=\"NV\">NV</option>\n            <option value=\"NH\">NH</option>\n            <option value=\"NJ\">NJ</option>\n            <option value=\"NM\">NM</option>\n            <option value=\"NY\">NY</option>\n            <option value=\"NC\">NC</option>\n            <option value=\"ND\">ND</option>\n            <option value=\"OH\">OH</option>\n            <option value=\"OK\">OK</option>\n            <option value=\"OR\">OR</option>\n            <option value=\"PA\">PA</option>\n            <option value=\"RI\">RI</option>\n            <option value=\"SC\">SC</option>\n            <option value=\"SD\">SD</option>\n            <option value=\"TN\">TN</option>\n            <option value=\"TX\">TX</option>\n            <option value=\"UT\">UT</option>\n            <option value=\"VT\">VT</option>\n            <option value=\"VA\">VA</option>\n            <option value=\"WA\">WA</option>\n            <option value=\"WV\">WV</option>\n            <option value=\"WI\">WI</option>\n            <option value=\"WY\">WY</option>\n          </select>\n        </label>\n        <label>\n          Job Title\n          <select\n            value={this.state.jobtitle}\n            onChange={this.handleJobTitleChange}\n          >\n            <option value=\"Accountant\">Accountant</option>\n            <option value=\"Analyst\">Analyst</option>\n            <option value=\"Architect\">Architect</option>\n            <option value=\"Assistant Professor\">Assistant Professor</option>\n            <option value=\"Associate\">Associate</option>\n            <option value=\"Consultant\">Consultant</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Physical Therapist\">Physical Therapist</option>\n            <option value=\"Postdoctoral Fellow\">Postdoctoral Fellow</option>\n            <option value=\"Project Manager\">Project Manager</option>\n            <option value=\"Research Assistant\">Research Assistant</option>\n            <option value=\"Software Engineer/Developer\">\n              Software Engineer\n            </option>\n            <option value=\"Technical Lead\">Technical</option>\n          </select>\n        </label>\n        <label>\n          Level\n          <select value={this.state.level} onChange={this.handleLevelChange}>\n            <option value=\"Level I\">Level 1</option>\n            <option value=\"Level II\">Level 2</option>\n            <option value=\"Level III\">Level 3</option>\n            <option value=\"Level IV\">Level 4</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default FlavorForm;\n","import React from \"react\";\nimport FlavorForm from \"./components/FlavorForm\";\n\nfunction App() {\n  return <FlavorForm />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}